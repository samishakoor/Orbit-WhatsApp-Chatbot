[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[project]
name = "orbit-whatsapp-chatbot"
version = "1.0.0"
description = "A multimodal WhatsApp Chatbot"
readme = "README.md"
requires-python = ">=3.13"
authors = [
    {name = "samishakoor", email = "samishakoor787@gmail.com"}
]
keywords = ["whatsapp", "chatbot", "fastapi", "ai", "langchain", "langgraph"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Communications :: Chat",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    # FastAPI and core dependencies
    "fastapi>=0.115.2",
    "fastapi-cli>=0.0.7,<0.1.0",
    "uvicorn>=0.30.1",
    "uvloop>=0.21.0,<0.22.0; sys_platform != 'win32'",
    "starlette>=0.40.0",
    # HTTP and async support
    "httpx>=0.28.1",
    "httpcore>=1.0.0,<2.0.0",
    "httptools>=0.6.0,<0.7.0",
    "h11>=0.16.0,<0.17.0",
    "sniffio>=1.3.0,<2.0.0",
    # Data validation and serialization
    "pydantic>=2.11.0,<3.0.0",
    "pydantic-core>=2.33.0,<3.0.0",
    "pydantic-settings>=2.9.0,<3.0.0",
    "annotated-types>=0.7.0,<0.8.0",
    "email-validator>=2.2.0,<3.0.0",
    # Request handling
    "python-multipart>=0.0.20,<0.1.0",
    # Authentication and security
    "python-jose[cryptography]>=3.3.0,<4.0.0",
    "bcrypt>=4.3.0,<5.0.0",
    "passlib[bcrypt]>=1.7.0,<2.0.0",
    # Database
    "sqlalchemy>=2.0.0,<3.0.0",
    "alembic>=1.14.0,<2.0.0",
    "psycopg[binary]>=3.2.0,<4.0.0",
    # Configuration
    "python-dotenv>=1.0.1,<2.0.0",
    # CLI and utilities
    "click>=8.1.0,<9.0.0",
    "typer>=0.16.0,<0.17.0",
    "rich>=14.0.0,<15.0.0",
    "rich-toolkit>=0.14.0,<0.15.0",
    "shellingham>=1.5.0,<2.0.0",
    # Template engine
    "Jinja2>=3.1.0,<4.0.0",
    # Markdown and documentation
    "markdown-it-py>=3.0.0,<4.0.0",
    "mdurl>=0.1.0,<0.2.0",
    "Pygments>=2.19.0,<3.0.0",
    # File monitoring for development
    "watchfiles>=1.0.0,<2.0.0",
    "websockets>=10.3,<15.0",
    # SSL certificates
    "certifi>=2024.12.0,<2025.0.0",
    # Network identifiers
    "idna>=3.10.0,<4.0.0",
    # YAML support
    "PyYAML>=6.0.0,<7.0.0",
    # Type checking utilities
    "typing-inspection>=0.4.0,<0.5.0",
    "typing-extensions>=4.14.0,<5.0.0",
    # AI and ML Core
    "openai>=1.68.2",
    "anthropic>=0.49.0",
    "langfuse>=2.33.1,<3.0.0",
    # LangChain ecosystem
    "langchain>=0.3.0",
    "langchain-anthropic>=0.3.10",
    "langchain-community>=0.3.20",
    "langchain-experimental>=0.3.4",
    "langchain-openai>=0.3.9",
    "langgraph>=0.3.18",
    "langgraph-checkpoint-postgres>=2.0.20",
    "langgraph-checkpoint-sqlite>=2.0.6",
    "langsmith>=0.3.18",
    # AutoGen ecosystem
    "autogen-agentchat>=0.4.9.2",
    "autogen-ext[grpc,mcp,ollama,openai]>=0.4.9.2",
    "openai-agents>=0.0.15",
    # Microsoft Semantic Kernel
    "semantic-kernel>=1.25.0",
    # Document processing
    "pymupdf>=1.26.3",
    "pypdf>=4.0.1,<5.0.0",
    "pypdf2>=3.0.1",
    "lxml>=5.3.1",
    "bs4>=0.0.2",
    # Google Cloud and Firebase
    "google-cloud-storage>=3.1.0,<4.0.0",
    "firebase-admin>=6.5.0,<6.7.0",
    "gcloud>=0.18.3,<0.19.0",
    # Additional services
    "sendgrid>=6.11.0",
    "polygon-api-client>=1.14.5",
    # Visualization and plotting
    "plotly>=6.0.1",
    # System utilities
    "psutil>=7.0.0",
    "speedtest-cli>=2.1.3",
    "colorama>=0.4.6,<0.5.0",
    "requests>=2.32.3",
    "wikipedia>=1.4.0",
    # File formats
    "openpyxl>=3.1.3,<4.0.0",
    "pydub>=0.25.1,<0.26.0",
    # Development utilities
    "retry==0.9.2",
    "sse-starlette==1.8.2",
    "sqlmodel>=0.0.18,<0.0.19",
    "setuptools>=78.1.0",
    "smithery>=0.1.0",
    # Cryptography
    "pycryptodomex>=3.20.0,<4.0.0",
    "pycryptodome>=3.20.0,<4.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0,<8.0.0",
    "pytest-asyncio>=0.21.0,<0.22.0",
    "pytest-cov>=4.0.0,<5.0.0",
    "black>=23.0.0,<24.0.0",
    "isort>=5.12.0,<6.0.0",
    "flake8>=6.0.0,<7.0.0",
    "mypy>=1.0.0,<2.0.0",
    "pre-commit>=3.0.0,<4.0.0",
]
test = [
    "pytest>=7.0.0,<8.0.0",
    "pytest-asyncio>=0.21.0,<0.22.0",
    "pytest-cov>=4.0.0,<5.0.0",
    "httpx>=0.28.0,<0.29.0",
]
docs = [
    "mkdocs>=1.5.0,<2.0.0",
    "mkdocs-material>=9.0.0,<10.0.0",
    "mkdocstrings[python]>=0.23.0,<0.24.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/orbit-whatsapp-chatbot"
Documentation = "https://github.com/yourusername/orbit-whatsapp-chatbot#readme"
Repository = "https://github.com/yourusername/orbit-whatsapp-chatbot.git"
"Bug Tracker" = "https://github.com/yourusername/orbit-whatsapp-chatbot/issues"

[project.scripts]
orbit-chatbot = "app.main:main"

[tool.uv]
dev-dependencies = [
    "pytest>=7.0.0,<8.0.0",
    "pytest-asyncio>=0.21.0,<0.22.0",
    "pytest-cov>=4.0.0,<5.0.0",
    "black>=23.0.0,<24.0.0",
    "isort>=5.12.0,<6.0.0",
    "flake8>=6.0.0,<7.0.0",
    "mypy>=1.0.0,<2.0.0",
    "pre-commit>=3.0.0,<4.0.0",
]

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312', 'py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["app"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "alembic.*",
    "bcrypt.*",
    "passlib.*",
    "jose.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
